//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sandler.DB.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;

    public partial class SandlerDBEntities : DbContext
    {
        public SandlerDBEntities()
            : base("name=SandlerDBEntities")
        {
        }

        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }

        public DbSet<Tbl_AppointmentsSource> Tbl_AppointmentsSource { get; set; }
        public DbSet<Tbl_AwardLevel> Tbl_AwardLevel { get; set; }
        public DbSet<Tbl_BehindAmount> Tbl_BehindAmount { get; set; }
        public DbSet<TBL_BlastEmailGroup> TBL_BlastEmailGroup { get; set; }
        public DbSet<Tbl_CertifiedLevel> Tbl_CertifiedLevel { get; set; }
        public DbSet<TBL_CHART> TBL_CHART { get; set; }
        public DbSet<TBL_COACH> TBL_COACH { get; set; }
        public DbSet<TBL_COMPANIES> TBL_COMPANIES { get; set; }
        public DbSet<Tbl_CostPlusAmount> Tbl_CostPlusAmount { get; set; }
        public DbSet<TBL_COUNTRY> TBL_COUNTRY { get; set; }
        public DbSet<Tbl_Course> Tbl_Course { get; set; }
        public DbSet<TBL_DOCS> TBL_DOCS { get; set; }
        public DbSet<Tbl_DocumentStatus> Tbl_DocumentStatus { get; set; }
        public DbSet<Tbl_FollowUpItemsList> Tbl_FollowUpItemsList { get; set; }
        public DbSet<TBL_FRANCHISEE> TBL_FRANCHISEE { get; set; }
        public DbSet<TBL_FRANCHISEE_USERS> TBL_FRANCHISEE_USERS { get; set; }
        public DbSet<TBL_GA_EstBenefitsGained> TBL_GA_EstBenefitsGained { get; set; }
        public DbSet<TBL_GA_QuotaAchievement> TBL_GA_QuotaAchievement { get; set; }
        public DbSet<TBL_GA_SalesCycleTime> TBL_GA_SalesCycleTime { get; set; }
        public DbSet<TBL_GA_SalesEfficiency> TBL_GA_SalesEfficiency { get; set; }
        public DbSet<TBL_GA_SalesQualification> TBL_GA_SalesQualification { get; set; }
        public DbSet<TBL_GA_SalesRepRetention> TBL_GA_SalesRepRetention { get; set; }
        public DbSet<TBL_GA_Tracker> TBL_GA_Tracker { get; set; }
        public DbSet<TBL_GA_TrainingCostSavings> TBL_GA_TrainingCostSavings { get; set; }
        public DbSet<TBL_GA_TrngBenefits> TBL_GA_TrngBenefits { get; set; }
        public DbSet<Tbl_IndustryType> Tbl_IndustryType { get; set; }
        public DbSet<Tbl_MasterFranchisee> Tbl_MasterFranchisee { get; set; }
        public DbSet<Tbl_MeetingFrequencyType> Tbl_MeetingFrequencyType { get; set; }
        public DbSet<Tbl_MeetingType> Tbl_MeetingType { get; set; }
        public DbSet<TBL_OPPORTUNITIES> TBL_OPPORTUNITIES { get; set; }
        public DbSet<TBL_OpportunitiesHistory> TBL_OpportunitiesHistory { get; set; }
        public DbSet<TBL_OpportunitySource> TBL_OpportunitySource { get; set; }
        public DbSet<TBL_OPPORTUNITYSTATUS> TBL_OPPORTUNITYSTATUS { get; set; }
        public DbSet<TBL_OpportunityTypes> TBL_OpportunityTypes { get; set; }
        public DbSet<TBL_OpportunityWhyLost> TBL_OpportunityWhyLost { get; set; }
        public DbSet<Tbl_PrimaryBusiness> Tbl_PrimaryBusiness { get; set; }
        public DbSet<Tbl_ProductType> Tbl_ProductType { get; set; }
        public DbSet<Tbl_PurchaseLevel> Tbl_PurchaseLevel { get; set; }
        public DbSet<TBL_REGION> TBL_REGION { get; set; }
        public DbSet<Tbl_SandlerRole> Tbl_SandlerRole { get; set; }
        public DbSet<TBL_State> TBL_State { get; set; }
        public DbSet<TBL_Trng_Expenditure> TBL_Trng_Expenditure { get; set; }
        public DbSet<TBL_UserEmailGroup> TBL_UserEmailGroup { get; set; }
        public DbSet<Tbl_YesNoOptions> Tbl_YesNoOptions { get; set; }
        public DbSet<vw_Contacts> vw_Contacts { get; set; }
        public DbSet<vw_Opportunities> vw_Opportunities { get; set; }
        public DbSet<vw_Companies> vw_Companies { get; set; }
        public DbSet<TBL_CONTACTS> TBL_CONTACTS { get; set; }
        public DbSet<module> modules { get; set; }
        public DbSet<pageMenu> pageMenus { get; set; }
        public DbSet<pageMenuGroup> pageMenuGroups { get; set; }
        public DbSet<Tbl_ModulesForRoles> Tbl_ModulesForRoles { get; set; }
        public DbSet<Tbl_ModulesForUserIds> Tbl_ModulesForUserIds { get; set; }
        public DbSet<TBL_PerformanceActuals> TBL_PerformanceActuals { get; set; }
        public DbSet<TBL_PerformanceGoals> TBL_PerformanceGoals { get; set; }
        public DbSet<Tbl_ACE> Tbl_ACE { get; set; }
        public DbSet<Tbl_ACE_Campaign> Tbl_ACE_Campaign { get; set; }
        public DbSet<Tbl_ACE_Documents> Tbl_ACE_Documents { get; set; }
        public DbSet<Tbl_ACE_Messages> Tbl_ACE_Messages { get; set; }
        public DbSet<Tbl_AceCallToActionType> Tbl_AceCallToActionType { get; set; }
        public DbSet<Tbl_AceCampaignType> Tbl_AceCampaignType { get; set; }
        public DbSet<TBL_ACEEmails> TBL_ACEEmails { get; set; }
        public DbSet<Tbl_ACEGroups> Tbl_ACEGroups { get; set; }
        public DbSet<Tbl_AceMainInfo> Tbl_AceMainInfo { get; set; }
        public DbSet<Tbl_AceEmailTracker> Tbl_AceEmailTracker { get; set; }
        public DbSet<aspnet_Membership> aspnet_Membership { get; set; }
        public DbSet<aspnet_Users> aspnet_Users { get; set; }
        public DbSet<LU_BillingState> LU_BillingState { get; set; }
        public DbSet<LU_CompanySource> LU_CompanySource { get; set; }
        public DbSet<LU_CompanyStatus> LU_CompanyStatus { get; set; }
        public DbSet<LU_ContactStatus> LU_ContactStatus { get; set; }
        public DbSet<LU_ExecBriefingTopic> LU_ExecBriefingTopic { get; set; }
        public DbSet<LU_IndustrySubCategory> LU_IndustrySubCategory { get; set; }
        public DbSet<LU_KAREDesignation> LU_KAREDesignation { get; set; }
        public DbSet<LU_NextActionStep> LU_NextActionStep { get; set; }
        public DbSet<LU_POC1ApptSource> LU_POC1ApptSource { get; set; }
        public DbSet<LU_POC1CompanyRole> LU_POC1CompanyRole { get; set; }
        public DbSet<LU_POC1NextActionStep> LU_POC1NextActionStep { get; set; }
        public DbSet<LU_POC1OpportunityRole> LU_POC1OpportunityRole { get; set; }
        public DbSet<LU_POC2ApptSource> LU_POC2ApptSource { get; set; }
        public DbSet<LU_POC2CompanyRole> LU_POC2CompanyRole { get; set; }
        public DbSet<LU_POC2NextActionStep> LU_POC2NextActionStep { get; set; }
        public DbSet<LU_POC2OpportunityRole> LU_POC2OpportunityRole { get; set; }
        public DbSet<LU_POC3ApptSource> LU_POC3ApptSource { get; set; }
        public DbSet<LU_POC3CompanyRole> LU_POC3CompanyRole { get; set; }
        public DbSet<LU_POC3NextActionStep> LU_POC3NextActionStep { get; set; }
        public DbSet<LU_POC3OpportunityRole> LU_POC3OpportunityRole { get; set; }
        public DbSet<LU_POCCertificationLevel> LU_POCCertificationLevel { get; set; }
        public DbSet<LU_POCCompanyRole> LU_POCCompanyRole { get; set; }
        public DbSet<LU_ProductService> LU_ProductService { get; set; }
        public DbSet<LU_State> LU_State { get; set; }
        public DbSet<LU_WorkshopTopic> LU_WorkshopTopic { get; set; }

        public virtual ObjectResult<vw_Companies> GetCompaniesByUser(Nullable<System.Guid> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(System.Guid));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<vw_Companies>("GetCompaniesByUser", userIdParameter);
        }

        public virtual ObjectResult<vw_Companies> GetCompaniesByUser(Nullable<System.Guid> userId, MergeOption mergeOption)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(System.Guid));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<vw_Companies>("GetCompaniesByUser", mergeOption, userIdParameter);
        }

        public virtual ObjectResult<vw_Contacts> GetContactsByUser(Nullable<System.Guid> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(System.Guid));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<vw_Contacts>("GetContactsByUser", userIdParameter);
        }

        public virtual ObjectResult<vw_Contacts> GetContactsByUser(Nullable<System.Guid> userId, MergeOption mergeOption)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(System.Guid));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<vw_Contacts>("GetContactsByUser", mergeOption, userIdParameter);
        }

        public virtual ObjectResult<vw_Opportunities> GetOpportunitiesByUser(Nullable<System.Guid> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(System.Guid));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<vw_Opportunities>("GetOpportunitiesByUser", userIdParameter);
        }

        public virtual ObjectResult<vw_Opportunities> GetOpportunitiesByUser(Nullable<System.Guid> userId, MergeOption mergeOption)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(System.Guid));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<vw_Opportunities>("GetOpportunitiesByUser", mergeOption, userIdParameter);
        }

        public virtual ObjectResult<GetNewAppointmentsWithAppointmentSource> GetNewAppointmentsWithAppointmentSource(Nullable<int> month, Nullable<int> year, Nullable<System.Guid> userId)
        {
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));

            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));

            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(System.Guid));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetNewAppointmentsWithAppointmentSource>("GetNewAppointmentsWithAppointmentSource", monthParameter, yearParameter, userIdParameter);
        }

        public virtual ObjectResult<ClientsAvgLengthWithIndustries> ClientsAvgLengthWithIndustries(Nullable<System.Guid> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(System.Guid));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ClientsAvgLengthWithIndustries>("ClientsAvgLengthWithIndustries", userIdParameter);
        }

        public virtual ObjectResult<GetBenchMarkCountry> GetBenchMarkCountryAll(Nullable<int> month, Nullable<int> year)
        {
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));

            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBenchMarkCountry>("GetBenchMarkCountryAll", monthParameter, yearParameter);
        }

        public virtual ObjectResult<GetBenchMarkFranchiseeRegion> GetBenchMarkFranchiseeRegions(Nullable<int> month, Nullable<int> year, Nullable<int> franchiseeId)
        {
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));

            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));

            var franchiseeIdParameter = franchiseeId.HasValue ?
                new ObjectParameter("franchiseeId", franchiseeId) :
                new ObjectParameter("franchiseeId", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBenchMarkFranchiseeRegion>("GetBenchMarkFranchiseeRegions", monthParameter, yearParameter, franchiseeIdParameter);
        }

        public virtual ObjectResult<GetBenchMarkRegionCountry> GetBenchMarkRegionCountry(Nullable<int> month, Nullable<int> year, Nullable<int> regionId)
        {
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));

            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));

            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("regionId", regionId) :
                new ObjectParameter("regionId", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBenchMarkRegionCountry>("GetBenchMarkRegionCountry", monthParameter, yearParameter, regionIdParameter);
        }

        public virtual ObjectResult<GetBenchMarkSalesFranchisee> GetBenchMarkSalesFranchisee(Nullable<int> month, Nullable<int> year, Nullable<int> franchiseeId)
        {
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));

            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));

            var franchiseeIdParameter = franchiseeId.HasValue ?
                new ObjectParameter("franchiseeId", franchiseeId) :
                new ObjectParameter("franchiseeId", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBenchMarkSalesFranchisee>("GetBenchMarkSalesFranchisee", monthParameter, yearParameter, franchiseeIdParameter);
        }

        public virtual int GetClosedSalesAnalysis(Nullable<int> month, Nullable<int> year, Nullable<System.Guid> userId, string analysisType, Nullable<bool> searchNewCompany, string companyIds)
        {
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));

            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));

            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(System.Guid));

            var analysisTypeParameter = analysisType != null ?
                new ObjectParameter("analysisType", analysisType) :
                new ObjectParameter("analysisType", typeof(string));

            var searchNewCompanyParameter = searchNewCompany.HasValue ?
                new ObjectParameter("searchNewCompany", searchNewCompany) :
                new ObjectParameter("searchNewCompany", typeof(bool));

            var companyIdsParameter = companyIds != null ?
                new ObjectParameter("companyIds", companyIds) :
                new ObjectParameter("companyIds", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetClosedSalesAnalysis", monthParameter, yearParameter, userIdParameter, analysisTypeParameter, searchNewCompanyParameter, companyIdsParameter);
        }

        public virtual ObjectResult<GetNewClientsWithProducts> GetNewClientsWithProducts(Nullable<int> month, Nullable<int> year, Nullable<System.Guid> userId)
        {
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));

            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));

            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(System.Guid));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetNewClientsWithProducts>("GetNewClientsWithProducts", monthParameter, yearParameter, userIdParameter);
        }

        public virtual ObjectResult<GetSalesCyclePortfolio> GetSalesCyclePortfolioData(Nullable<System.Guid> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(System.Guid));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSalesCyclePortfolio>("GetSalesCyclePortfolioData", userIdParameter);
        }

        public virtual int PipelineOpportunityAnalysis(Nullable<int> month, Nullable<int> year, Nullable<System.Guid> userId, string analysisType, Nullable<bool> searchNewCompany, string companyIds)
        {
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));

            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));

            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(System.Guid));

            var analysisTypeParameter = analysisType != null ?
                new ObjectParameter("analysisType", analysisType) :
                new ObjectParameter("analysisType", typeof(string));

            var searchNewCompanyParameter = searchNewCompany.HasValue ?
                new ObjectParameter("searchNewCompany", searchNewCompany) :
                new ObjectParameter("searchNewCompany", typeof(bool));

            var companyIdsParameter = companyIds != null ?
                new ObjectParameter("companyIds", companyIds) :
                new ObjectParameter("companyIds", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PipelineOpportunityAnalysis", monthParameter, yearParameter, userIdParameter, analysisTypeParameter, searchNewCompanyParameter, companyIdsParameter);
        }

        public virtual ObjectResult<module> GetMenuForARole(string roleName, string userId)
        {
            var roleNameParameter = roleName != null ?
                new ObjectParameter("roleName", roleName) :
                new ObjectParameter("roleName", typeof(string));

            var userIdParameter = userId != null ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<module>("GetMenuForARole", roleNameParameter, userIdParameter);
        }

        public virtual ObjectResult<module> GetMenuForARole(string roleName, string userId, MergeOption mergeOption)
        {
            var roleNameParameter = roleName != null ?
                new ObjectParameter("roleName", roleName) :
                new ObjectParameter("roleName", typeof(string));

            var userIdParameter = userId != null ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<module>("GetMenuForARole", mergeOption, roleNameParameter, userIdParameter);
        }

        public virtual ObjectResult<MenuDetail> GetMenuDetail(Nullable<int> appId)
        {
            var appIdParameter = appId.HasValue ?
                new ObjectParameter("appId", appId) :
                new ObjectParameter("appId", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MenuDetail>("GetMenuDetail", appIdParameter);
        }

        public virtual int GetACECampaignsForCampaignType(Nullable<int> campaignTypeId, Nullable<System.DateTime> eventCompareDate)
        {
            var campaignTypeIdParameter = campaignTypeId.HasValue ?
                new ObjectParameter("campaignTypeId", campaignTypeId) :
                new ObjectParameter("campaignTypeId", typeof(int));

            var eventCompareDateParameter = eventCompareDate.HasValue ?
                new ObjectParameter("eventCompareDate", eventCompareDate) :
                new ObjectParameter("eventCompareDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetACECampaignsForCampaignType", campaignTypeIdParameter, eventCompareDateParameter);
        }
    }
}
