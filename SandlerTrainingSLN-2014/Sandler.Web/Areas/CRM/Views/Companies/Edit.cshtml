@model dynamic
<script src="~/Scripts/Application/ng-companies.js" type="text/javascript"></script>
<div id="editingContainer" class="col-sm-5">
       <div class="row simpleLine">
			   <div id="resultSummary" style="color: Red">
					<ul>
					</ul>
				</div>
       <!-- <div class="control-group"></div>
				<label class="help-block">Company Name: <span style="color:Red;">*</span></label>
				<div class="controls">
				  <input type="text" class="input-xlarge" id="COMPANYNAME" data-bind="value:COMPANYNAME">				  
				</div>
		</div>-->
                    <select class="fontsize80p" data-bind="options: companies,optionsText: 'name',optionsValue: 'id'"></select>

     <div class="row simpleLine">

                <div class="col-xs-4">
                    <span class="fontsize80p">Company Name</span>
                </div>
                <div class="col-xs-6">
                    <input type="text" class="fontsize80p" data-bind="value: COMPANYNAME" />
                </div>
            </div>
           <div class="row simpleLine">
                <div class="col-xs-4">
                    <span class="fontsize80p">Company Ownership</span>
                </div>
                <div class="col-xs-6">
                    <input type="text" class="fontsize80p" data-bind="value: CompanyOwnership" />
                </div>
            </div>
           <div class="row simpleLine">
                <div class="col-xs-4">
                    <span class="fontsize80p">Company Description</span>
                </div>
                <div class="col-xs-6">
                    <input type="text" class="fontsize80p" data-bind="value: CompanyDescription" />
                </div>
            </div>
            <div class="row simpleLine">
                <div class="col-xs-4">
                    <span class="fontsize80p">Address</span>
                </div>
                <div class="col-xs-6">
                    <input type="text" class="fontsize80p" data-bind="value: Address" />
                </div>
            </div>
            <div class="row simpleLine">
                <div class="col-xs-4">
                    <span class="fontsize80p">City</span>
                </div>
                <div class="col-xs-6">
                    <input type="text" class="fontsize80p" data-bind="value: City" />
                </div>
            </div>
            <div class="row simpleLine">
                <div class="col-xs-4">
                    <span class="fontsize80p">State</span>
                </div>
                <div class="col-xs-6">
                    <input type="text" class="fontsize80p" data-bind="value: State" />
                </div>
            </div>
            <div class="row simpleLine">
                <div class="col-xs-4">
                    <span class="fontsize80p">Zip</span>
                </div>
                <div class="col-xs-6">
                    <input type="text" class="fontsize80p" data-bind="value: Zip" />
                </div>
            </div>
            <div class="row simpleLine">
                <div class="col-xs-4">
                    <span class="fontsize80p">Country</span>
                </div>
                <div class="col-xs-6">
                    <input type="text" class="fontsize80p" data-bind="value: Country" />
                </div>
            </div>
           <div class="row simpleLine">
                <div class="col-xs-4">
                    <span class="fontsize80p">Is Same Billing Address</span>
                </div>
                <div class="col-xs-6">
                    <input type="text" class="fontsize80p" data-bind="value: IsSameBillingAddress" />
                </div>
            </div>
           <div class="row simpleLine">
                <div class="col-xs-4">
                    <span class="fontsize80p">Billing Address</span>
                </div>
                <div class="col-xs-6">
                    <input type="text" class="fontsize80p" data-bind="value: BillingAddress" />
                </div>
            </div>
           <div class="row simpleLine">
                <div class="col-xs-4">
                    <span class="fontsize80p">Billing City</span>
                </div>
                <div class="col-xs-6">
                    <input type="text" class="fontsize80p" data-bind="value: BillingCity" />
                </div>
            </div>
           <div class="row simpleLine">
                <div class="col-xs-4">
                    <span class="fontsize80p">Billing State</span>
                </div>
                <div class="col-xs-6">
                    <input type="text" class="fontsize80p" data-bind="value: BillingState" />
                </div>
            </div>
           <div class="row simpleLine">
                <div class="col-xs-4">
                    <span class="fontsize80p">Billing Zip</span>
                </div>
                <div class="col-xs-6">
                    <input type="text" class="fontsize80p" data-bind="value: BillingZip" />
                </div>
            </div>
            <div class="row simpleLine">
                <div class="col-xs-4">
                    <span class="fontsize80p">Billing Country</span>
                </div>
                <div class="col-xs-6">
                    <input type="text" class="fontsize80p" data-bind="value: BillingCountry" />
                </div>
            </div>
           <div class="row simpleLine">
                <div class="col-xs-4">
                    <span class="fontsize80p">POC Last Name</span>
                </div>
                <div class="col-xs-6">
                    <input type="text" class="fontsize80p" data-bind="value: POCLastName" />
                </div>
            </div>
           <div class="row simpleLine">
                <div class="col-xs-4">
                    <span class="fontsize80p">POC First Name</span>
                </div>
                <div class="col-xs-6">
                    <input type="text" class="fontsize80p" data-bind="value: POCFirstName" />
                </div>
            </div>
           <div class="row simpleLine">
                <div class="col-xs-4">
                    <span class="fontsize80p">POC Phone</span>
                </div>
                <div class="col-xs-6">
                    <input type="text" class="fontsize80p" data-bind="value: POCPhone" />
                </div>
            </div>
            <div class="row simpleLine">
                <div class="col-xs-4">
                    <span class="fontsize80p">POC Department</span>
                </div>
                <div class="col-xs-6">
                    <input type="text" class="fontsize80p" data-bind="value: POCDepartment" />
                </div>
            </div>
            <div class="row simpleLine">
                <div class="col-xs-4">
                    <span class="fontsize80p">POC Email</span>
                </div>
                <div class="col-xs-6">
                    <input type="text" class="fontsize80p" data-bind="value: POCEmail" />
                </div>
            </div>
            <div class="row simpleLine">
                <div class="col-xs-4">
                    <span class="fontsize80p">POC Fax</span>
                </div>
                <div class="col-xs-6">
                    <input type="text" class="fontsize80p" data-bind="value: POCFax" />
                </div>
            </div>
            <div class="row simpleLine">
                <div class="col-xs-4">
                    <span class="fontsize80p">Assistant Last Name</span>
                </div>
                <div class="col-xs-6">
                    <input type="text" class="fontsize80p" data-bind="value: AssistantLastName" />
                </div>
            </div>
            <div class="row simpleLine">
                <div class="col-xs-4">
                    <span class="fontsize80p">Assistant First Name</span>
                </div>
                <div class="col-xs-6">
                    <input type="text" class="fontsize80p" data-bind="value: AssistantFirstName" />
                </div>
            </div>
           <div class="row simpleLine">
                <div class="col-xs-4">
                    <span class="fontsize80p">Assistant Phone</span>
                </div>
                <div class="col-xs-6">
                    <input type="text" class="fontsize80p" data-bind="value: AssistantPhone" />
                </div>
            </div>
            <div class="row simpleLine">
                <div class="col-xs-4">
                    <span class="fontsize80p">Is New Company</span>
                </div>
                <div class="col-xs-6">
                    <input type="text" class="fontsize80p" data-bind="value: IsNewCompany" />
                </div>
            </div>
            <div class="row simpleLine">
                <div class="col-xs-4">
                    <span class="fontsize80p">Company Website</span>
                </div>
                <div class="col-xs-6">
                    <input type="text" class="fontsize80p" data-bind="value: Website" />
                </div>
            </div>
            <div class="row simpleLine">
                <div class="col-xs-4">
                    <span class="fontsize80p">Employee Quantity</span>
                </div>
                <div class="col-xs-6">
                    <input type="text" class="fontsize80p" data-bind="value: EmpQuantity" />
                </div>
            </div>
            <div class="row simpleLine">
                <div class="col-xs-4">
                    <span class="fontsize80p">Company Value Goal</span>
                </div>
                <div class="col-xs-6">
                    <input type="text" class="fontsize80p" data-bind="value: COMPANYVALUEGOAL" />
                </div>
            </div>
           <div class="row simpleLine">
                <div class="col-xs-4">
                    <span class="fontsize80p">Industry</span>
                </div>
                <div class="col-xs-6">
                    <select class="fontsize80p" data-bind="options: industries,optionsText: 'IndustryTypeName',optionsValue: 'IndId',value:IndustryId"></select>
                                            
                </div>
            </div>
           <div class="row simpleLine">
                <div class="col-xs-4">
                    <span class="fontsize80p">Sandler Rep Last Name</span>
                </div>
                <div class="col-xs-6">
                    <input type="text" class="fontsize80p" data-bind="value: RepLastName" />
                </div>
            </div>
            <div class="row simpleLine">
                <div class="col-xs-4">
                    <span class="fontsize80p">Sandler Rep First Name</span>
                </div>
                <div class="col-xs-6">
                    <input type="text" class="fontsize80p" data-bind="value: RepFirstName" />
                </div>
            </div>
           <div class="row simpleLine">
                <div class="col-xs-4">
                    <span class="fontsize80p">Discussion Topic</span>
                </div>
                <div class="col-xs-6">
                    <input type="text" class="fontsize80p" data-bind="value: DiscussionTopic" />
                </div>
            </div>
            <div class="row simpleLine">
                <div class="col-xs-4">
                    <span class="fontsize80p">Action Step</span>
                </div>
                <div class="col-xs-6">
                    <input type="text" class="fontsize80p" data-bind="value: ACTIONSTEP" />
                </div>
            </div>
           <div class="row simpleLine">
                <div class="col-xs-4">
                    <span class="fontsize80p">Last Contact Date</span>
                </div>
                <div class="col-xs-6" data-bind="visible: LASTCONTACT_DATE">
                        
                    <input type="text" class="fontsize80p" data-bind="kendoDatePicker: { value: LASTCONTACT_DATE, format: 'MM/dd/yy'  } " />
                    <!--<input type="text" class="fontsize80p" data-bind="value: LASTCONTACT_DATE" />
                        <input id="mail_endDte" style="max-width:170px;"   data-bind="kendoDatePicker: { value: LASTCONTACT_DATE, format: 'MM/dd/yy'  } "/>                   
                        -->
                </div>
            </div>
            <div class="row simpleLine">
                <div class="col-xs-4">
                    <span class="fontsize80p">Next Contact Date</span>
                </div>
                <div class="col-xs-6">
                    <input type="text" class="fontsize80p" data-bind="value: NEXTCONTACT_DATE" />
                </div>
            </div>
            <div class="row simpleLine">
                <div class="col-xs-4">
                    <span class="fontsize80p">Creation Date</span>
                </div>
                <!--<div class="col-xs-6">-->
                     <div class="col-xs-6" data-bind="value: CreationDate"> 
                    <!--<input type="text" class="fontsize80p" data-bind="value: CreationDate" />-->
                    <input  style="max-width:150px;" data-bind="kendoDatePicker: { value: CreationDate, format: 'MM/dd/yy'  } " />
                </div>
            </div>
            <div class="row simpleLine">
                <div class="col-xs-4">
                    <span class="fontsize80p">Company Notes</span>
                </div>
                <div class="col-xs-6">
                    <input type="text" class="fontsize80p" data-bind="value: Notes" />
                </div>
            </div>
    
    
    <input type="button"  value="Save" />
</div>

<script type="text/javascript">
    
    function companyDataVM() {
        var self = this;                 
        self.COMPANYNAME = ko.observable('');
        self.COMPANYNAMERequired = ko.observable('*');
        self.COMPANYNAMERequiredMsg = ko.observable('');
        self.COMPANYNAMERequiredHasError = ko.observable(false);

        self.CompanyOwnership = ko.observable('');
        self.CompanyOwnershipRequired = ko.observable('*');
        self.CompanyOwnershipRequiredMsg = ko.observable('');
        self.CompanyOwnershipRequiredHasError = ko.observable(false);

        self.CompanyDescription = ko.observable('');
        self.CompanyDescriptionRequired = ko.observable('*');
        self.CompanyDescriptionRequiredMsg = ko.observable('');
        self.CompanyDescriptionRequiredHasError = ko.observable(false);

        self.Address = ko.observable('');
        self.AddressRequired = ko.observable('*');
        self.AddressRequiredMsg = ko.observable('');
        self.AddressRequiredHasError = ko.observable(false);

        self.City = ko.observable('');
        self.CityRequired = ko.observable('*');
        self.CityRequiredMsg = ko.observable('');
        self.CityRequiredHasError = ko.observable(false);

        self.State = ko.observable('');
        self.StateRequired = ko.observable('*');
        self.StateRequiredMsg = ko.observable('');
        self.StateRequiredHasError = ko.observable(false);

        self.Zip = ko.observable('');
        self.ZipRequired = ko.observable('*');
        self.ZipRequiredMsg = ko.observable('');
        self.ZipRequiredHasError = ko.observable(false);

        self.Country = ko.observable('');
        self.CountryRequired = ko.observable('*');
        self.CountryRequiredMsg = ko.observable('');
        self.CountryRequiredHasError = ko.observable(false);

        self.IsSameBillingAddress = ko.observable('');
        self.IsSameBillingAddressRequired = ko.observable('*');
        self.IsSameBillingAddressRequiredMsg = ko.observable('');
        self.IsSameBillingAddressRequiredHasError = ko.observable(false);

        self.BillingAddress = ko.observable('');
        self.BillingAddressRequired = ko.observable('*');
        self.BillingAddressRequiredMsg = ko.observable('');
        self.BillingAddressRequiredHasError = ko.observable(false);

        self.BillingCity = ko.observable('');
        self.BillingCityRequired = ko.observable('*');
        self.BillingCityRequiredMsg = ko.observable('');
        self.BillingCityRequiredHasError = ko.observable(false);

        self.BillingState = ko.observable('');
        self.BillingStateRequired = ko.observable('*');
        self.BillingStateRequiredMsg = ko.observable('');
        self.BillingStateRequiredHasError = ko.observable(false);

        self.BillingZip = ko.observable('');
        self.BillingZipRequired = ko.observable('*');
        self.BillingZipRequiredMsg = ko.observable('');
        self.BillingZipRequiredHasError = ko.observable(false);

        self.BillingCountry = ko.observable('');
        self.BillingCountryRequired = ko.observable('*');
        self.BillingCountryRequiredMsg = ko.observable('');
        self.BillingCountryRequiredHasError = ko.observable(false);

        self.POCLastName = ko.observable('');
        self.POCLastNameRequired = ko.observable('*');
        self.POCLastNameRequiredMsg = ko.observable('');
        self.POCLastNameRequiredHasError = ko.observable(false);

        self.POCFirstName = ko.observable('');
        self.POCFirstNameRequired = ko.observable('*');
        self.POCFirstNameRequiredMsg = ko.observable('');
        self.POCFirstNameRequiredHasError = ko.observable(false);

        self.POCPhone = ko.observable('');
        self.POCPhoneRequired = ko.observable('*');
        self.POCPhoneRequiredMsg = ko.observable('');
        self.POCPhoneRequiredHasError = ko.observable(false);

        self.POCDepartment = ko.observable('');
        self.POCDepartmentRequired = ko.observable('*');
        self.POCDepartmentRequiredMsg = ko.observable('');
        self.POCDepartmentRequiredHasError = ko.observable(false);

        self.POCEmail = ko.observable('');
        self.POCEmailRequired = ko.observable('*');
        self.POCEmailRequiredMsg = ko.observable('');
        self.POCEmailRequiredHasError = ko.observable(false);

        self.POCFax = ko.observable('');
        self.POCFaxRequired = ko.observable('*');
        self.POCFaxRequiredMsg = ko.observable('');
        self.POCFaxRequiredHasError = ko.observable(false);

        self.AssistantLastName = ko.observable('');
        self.AssistantLastNameRequired = ko.observable('*');
        self.AssistantLastNameRequiredMsg = ko.observable('');
        self.AssistantLastNameRequiredHasError = ko.observable(false);

        self.AssistantFirstName = ko.observable('');
        self.AssistantFirstNameRequired = ko.observable('*');
        self.AssistantFirstNameRequiredMsg = ko.observable('');
        self.AssistantFirstNameRequiredHasError = ko.observable(false);

        self.AssistantPhone = ko.observable('');
        self.AssistantPhoneRequired = ko.observable('*');
        self.AssistantPhoneRequiredMsg = ko.observable('');
        self.AssistantPhoneRequiredHasError = ko.observable(false);

        self.IsNewCompany = ko.observable('');
        self.IsNewCompanyRequired = ko.observable('*');
        self.IsNewCompanyRequiredMsg = ko.observable('');
        self.IsNewCompanyRequiredHasError = ko.observable(false);

        self.Website = ko.observable('');
        self.WebsiteRequired = ko.observable('*');
        self.WebsiteRequiredMsg = ko.observable('');
        self.WebsiteRequiredHasError = ko.observable(false);

        self.EmpQuantity = ko.observable('');
        self.EmpQuantityRequired = ko.observable('*');
        self.EmpQuantityRequiredMsg = ko.observable('');
        self.EmpQuantityRequiredHasError = ko.observable(false);

        self.COMPANYVALUEGOAL = ko.observable('');
        self.COMPANYVALUEGOALRequired = ko.observable('*');
        self.COMPANYVALUEGOALRequiredMsg = ko.observable('');
        self.COMPANYVALUEGOALRequiredHasError = ko.observable(false);

        self.IndustryId=ko.observable('');

        self.RepLastName = ko.observable('');
        self.RepLastNameRequired = ko.observable('*');
        self.RepLastNameRequiredMsg = ko.observable('');
        self.RepLastNameRequiredHasError = ko.observable(false);

        self.RepFirstName = ko.observable('');
        self.RepFirstNameRequired = ko.observable('*');
        self.RepFirstNameRequiredMsg = ko.observable('');
        self.RepFirstNameRequiredHasError = ko.observable(false);

        self.DiscussionTopic = ko.observable('');
        self.DiscussionTopicRequired = ko.observable('*');
        self.DiscussionTopicRequiredMsg = ko.observable('');
        self.DiscussionTopicRequiredHasError = ko.observable(false);

        self.ACTIONSTEP = ko.observable('');
        self.ACTIONSTEPRequired = ko.observable('*');
        self.ACTIONSTEPRequiredMsg = ko.observable('');
        self.ACTIONSTEPRequiredHasError = ko.observable(false);

        self.LASTCONTACT_DATE = ko.observable('');
        self.LASTCONTACT_DATERequired = ko.observable('*');
        self.LASTCONTACT_DATERequiredMsg = ko.observable('');
        self.LASTCONTACT_DATERequiredHasError = ko.observable(false);

        self.NEXTCONTACT_DATE = ko.observable('');
        self.NEXTCONTACT_DATERequired = ko.observable('*');
        self.NEXTCONTACT_DATERequiredMsg = ko.observable('');
        self.NEXTCONTACT_DATERequiredHasError = ko.observable(false);

        self.CreationDate = ko.observable('');
        self.CreationDateRequired = ko.observable('*');
        self.CreationDateRequiredMsg = ko.observable('');
        self.CreationDateRequiredHasError = ko.observable(false);

        self.Notes = ko.observable('');
        self.NotesRequired = ko.observable('*');
        self.NotesRequiredMsg = ko.observable('');
        self.NotesRequiredHasError = ko.observable(false);

       

        self.industries = ko.observableArray([]);
        
        self.validationErrors = ko.observableArray([]);
       
       // var companyVM;

        $.ajax({
            url: 'api/Company/Get?id=' + @Model.companyId,
            type: 'GET',
            contentType: 'application/json',            
            success: function (result) {  
                console.log(result);
                self.COMPANYNAME(result.COMPANYNAME);
                self.CompanyOwnership(result.CompanyOwnership);
                self.CompanyDescription(result.CompanyDescription); 
                self.Address(result.Address);
                self.City(result.City);
                self.State(result.State);
                self.Zip(result.Zip);
                self.Country(result.Country);
                self.IsSameBillingAddress(result.IsSameBillingAddress);
                self.BillingAddress(result.BillingAddress);
                self.BillingCity(result.BillingCity);
                self.BillingState(result.BillingState);
                self.BillingZip(result.BillingZip);
                self.BillingCountry(result.BillingCountry);
                self.POCLastName(result.POCLastName);
                self.POCFirstName(result.POCFirstName);
                self.POCPhone(result.POCPhone);
                self.POCDepartment(result.POCDepartment);
                self.POCEmail(result.POCEmail);
                self.POCFax(result.POCFax);
                self.AssistantLastName(result.AssistantLastName);
                self.AssistantFirstName(result.AssistantFirstName);
                self.AssistantPhone(result.AssistantPhone);
                self.IsNewCompany(result.IsNewCompany);
                self.Website(result.Website);
                self.EmpQuantity(result.EmpQuantity);
                self.COMPANYVALUEGOAL(result.COMPANYVALUEGOAL);
                self.IndustryId(result.IndustryId);
                self.RepLastName(result.RepLastName);
                self.RepFirstName(result.RepFirstName);
                self.DiscussionTopic(result.DiscussionTopic);
                self.ACTIONSTEP(result.ACTIONSTEP);
                self.LASTCONTACT_DATE(result.LASTCONTACT_DATE);
                self.NEXTCONTACT_DATE(result.NEXTCONTACT_DATE);
                self.CreationDate(result.CreationDate);
                self.Notes(result.Notes);
               // companyVM = ko.mapping.fromJS(result);
                
            },
            error: function (result) {
                //handle the error, left for brevity
            }

        });
    

        /*self.save = function () {
            self.validationErrors([]);
            self.IDcompanyNameRequiredHasError(false);
            self.IDcompanyOwnershipRequiredHasError(false);
            self.IDcompanyDescriptionRequiredHasError(false);

            $('#resultSummary ul').empty();

            if (self.IDcompanyName() == '' || self.IDcompanyName() == undefined) {
                self.IDcompanyNameRequiredHasError(true);
                self.IDcompanyNameRequiredMsg('Company Name is required');
                self.validationErrors.push(self.IDcompanyNameRequiredMsg());
            }
            if (self.IDcompanyOwnership() == '' || self.IDcompanyOwnership() == undefined) {
                self.IDcompanyOwnershipRequiredHasError(true);
                self.IDcompanyOwnershipRequiredMsg('Company Ownership is required');
                self.validationErrors.push(self.IDcompanyOwnershipRequiredMsg());
            }
            if (self.IDcompanyDescription() == '' || self.IDcompanyDescription() == undefined) {
                self.IDcompanyDescriptionRequiredHasError(true);
                self.IDcompanyDescriptionRequiredMsg('Company Description is required');
                self.validationErrors.push(self.IDcompanyDescriptionRequiredMsg());
            }
            if (self.validationErrors() == '') {
                var json = JSON.stringify({
                    id:self.companyId(),
                    COMPANYNAME: self.IDcompanyName(),
                    CompanyOwnership: self.IDcompanyOwnership(),
                    CompanyDescription: self.IDcompanyDescription()                 
                });
                $.ajax({
                    url: baseUrl + "/api/Company/Save",
                    type: "POST",
                    data: json,
                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    success: function (response) {
                        log(response.UserName);
                        $('#resultSummary ul').append('<li>Company Information data being updated.</li>');
                    },
                    error: function (response, errorText) {
                    }
                });
            }
            else {
                $.each(self.validationErrors(), function (i, item) {
                    //log(item);
                    $('#resultSummary ul').append('<li>' + item + '</li>');
                });

            }

           

        }*/
    }
    $(document).ready(function () {
        var startModule = sandler.appStart.module;
        var companyVM = new companyDataVM();
        companyVM.industries = startModule.getIndustryTypes();
        //console.log(startModule.getUserCompanies());
        companyVM.companies = startModule.getUserCompanies();
        ko.applyBindings(companyVM, document.getElementById("editingContainer"));

    });

    
        
</script>



